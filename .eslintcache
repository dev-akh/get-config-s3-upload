[{"D:\\React\\Judgify\\get-config-s3-upload\\src\\index.js":"1","D:\\React\\Judgify\\get-config-s3-upload\\src\\App.js":"2","D:\\React\\Judgify\\get-config-s3-upload\\src\\config.js":"3","D:\\React\\Judgify\\get-config-s3-upload\\src\\reactS3Upload.js":"4","D:\\React\\Judgify\\get-config-s3-upload\\src\\reportWebVitals.js":"5","D:\\React\\Judgify\\get-config-s3-upload\\src\\s3\\Date.js":"6","D:\\React\\Judgify\\get-config-s3-upload\\src\\s3\\Policy.js":"7","D:\\React\\Judgify\\get-config-s3-upload\\src\\s3\\Signature.js":"8","D:\\React\\Judgify\\get-config-s3-upload\\src\\s3\\react-aws-s3.js":"9"},{"size":500,"mtime":1610077019355,"results":"10","hashOfConfig":"11"},{"size":1026,"mtime":1610092450613,"results":"12","hashOfConfig":"11"},{"size":266,"mtime":1610094193898,"results":"13","hashOfConfig":"11"},{"size":543,"mtime":1610093650174,"results":"14","hashOfConfig":"11"},{"size":362,"mtime":1610077019355,"results":"15","hashOfConfig":"11"},{"size":314,"mtime":1610091254884,"results":"16","hashOfConfig":"11"},{"size":995,"mtime":1610089401027,"results":"17","hashOfConfig":"11"},{"size":806,"mtime":1610090281272,"results":"18","hashOfConfig":"11"},{"size":3537,"mtime":1610094126440,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ua29ut",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"D:\\React\\Judgify\\get-config-s3-upload\\src\\index.js",[],["42","43"],"D:\\React\\Judgify\\get-config-s3-upload\\src\\App.js",["44","45"],"import logo from './logo.svg';\nimport React from \"react\";\nimport './App.css';\nimport {UploadS3} from './reactS3Upload'\n// import {S3FileUpload} from './S3FileUpload'\nimport {s3configs} from './config'\n\nexport default function App() {\n  \n  const fileSelect=(e)=>{\n    let files=e.target.files;\n    console.log(\"File\",files);\n    if(files.length>0){\n      var fileName=\"test-uploads/\"+Date.now()+\"_\"+files[0].name;\n      UploadS3(files[0],fileName);\n    }\n  }\n  return (\n    <div id=\"app\" className=\"App\">\n      <h3>Can change date in <span className=\"bg-light\">/src/s3/Date.js</span></h3>\n      <div className=\"alignleft\">\n      <input type=\"file\" name=\"select-file\" id=\"select-file\" className=\"select-file\" onChange={(e)=>fileSelect(e)}/>\n      <div>\n        <ol>\n          <li>Click 'choose file'</li>\n          <li>Select an image file</li>\n          <li>(Final) see keys at console log</li>\n        </ol>\n        <h5>\n          Please see keys at the console\n        </h5>\n      </div>\n      </div>\n    </div>\n    );\n  }\n  ","D:\\React\\Judgify\\get-config-s3-upload\\src\\config.js",[],"D:\\React\\Judgify\\get-config-s3-upload\\src\\reactS3Upload.js",[],"D:\\React\\Judgify\\get-config-s3-upload\\src\\reportWebVitals.js",[],["46","47"],"D:\\React\\Judgify\\get-config-s3-upload\\src\\s3\\Date.js",[],"D:\\React\\Judgify\\get-config-s3-upload\\src\\s3\\Policy.js",[],"D:\\React\\Judgify\\get-config-s3-upload\\src\\s3\\Signature.js",[],"D:\\React\\Judgify\\get-config-s3-upload\\src\\s3\\react-aws-s3.js",["48","49"],"import shortId from 'short-uuid';\nimport { dateYMD, xAmzDate,dateISOString } from \"./Date\";\nimport { throwError } from \"./ErrorThrower\";\nimport GetUrl from \"./Url\";\nimport {getPolicy} from \"./Policy\";\nimport {getSignature} from \"./Signature\"\n\nclass ReactS3Client {\n  config;\n  constructor(config) {\n    this.config = config;\n  }\n  async uploadFile(file, newFileName){\n    throwError(this.config, file);\n    const fileExtension = file.type.split('/')[1];\n    const fileName = `${newFileName || shortId.generate()}.${fileExtension}`;\n\n    console.log(\"dateISOString:\",dateISOString);\n    console.log(\"Configuration : \",this.config);\n    console.log(\"Selected date YMD : \",dateYMD);\n    console.log(\"==========================START===============================\");\n    console.log(\"key :\",`${this.config.dirName && this.config.dirName!=\"\" ? this.config.dirName + \"/\" : \"\"}${fileName}`);\n    console.log(\"acl :\", \"public-read\");\n    console.log(\"Content-Type :\", file.type);\n    console.log(\"x-amz-meta-uuid :\", \"14365123651274\");\n    console.log(\"x-amz-server-side-encryption :\", \"AES256\");\n    console.log(\"X-Amz-Date :\",xAmzDate);\n    console.log(\"X-Amz-Credential :\",`${this.config.accessKeyId}/${dateYMD}/${this.config.region}/s3/aws4_request`);\n    console.log(\"X-Amz-Algorithm :\", \"AWS4-HMAC-SHA256\");\n    console.log(\"Policy :\", getPolicy(this.config));\n    console.log(\"X-Amz-Signature :\", getSignature(this.config, dateYMD, getPolicy(this.config)));\n    console.log(\"==========================END================================\")\n    \n    \n    // const fd = new FormData();\n    // const fileExtension = file.type.split('/')[1];\n    // const fileName = `${newFileName || shortId.generate()}.${fileExtension}`;\n    // const key = `${this.config.dirName ? this.config.dirName + \"/\" : \"\"}${fileName}`;\n    // const url = GetUrl(this.config);\n    // fd.append(\"key\", key);\n    // fd.append(\"acl\", \"public-read\");\n    // fd.append(\"Content-Type\", file.type);\n    // fd.append(\"x-amz-meta-uuid\", \"14365123651274\");\n    // fd.append(\"x-amz-server-side-encryption\", \"AES256\");\n    // fd.append(\n    //     \"X-Amz-Credential\",\n    //     `${this.config.accessKeyId}/${dateYMD}/${this.config.region}/s3/aws4_request`\n    // );\n    // fd.append(\"X-Amz-Algorithm\", \"AWS4-HMAC-SHA256\");\n    // fd.append(\"X-Amz-Date\", xAmzDate);\n    // fd.append(\"x-amz-meta-tag\", \"\");\n    // fd.append(\"Policy\", getPolicy(this.config));\n    // fd.append(\n    //     \"X-Amz-Signature\",\n    //     getSignature(this.config, dateYMD, getPolicy(this.config))\n    // );\n    // fd.append(\"file\", file);\n    \n    // const data = await fetch(url, { method: \"post\", body: fd });\n    // if (!data.ok) return Promise.reject(data);\n    // return Promise.resolve({\n    //   bucket: this.config.bucketName,\n    //   key: `${this.config.dirName ? this.config.dirName + \"/\" : \"\"}${fileName}`,\n    //   location: `${url}/${this.config.dirName ? this.config.dirName + \"/\" : \"\"}${fileName}`,\n    //   status: data.status\n    // });\n  }\n  async deleteFile(fileName) {\n    const url = `https://${this.config.bucketName}.s3${\n    this.config.region ? \"-\" + this.config.region : \"\"\n  }.amazonaws.com/${\n    this.config.dirName ? this.config.dirName + \"/\" : \"\"\n  }${fileName}`;\n  \n  const deleteResult = await fetch(url, { method: \"delete\" });\n  if (!deleteResult.ok) return Promise.reject(deleteResult);\n  return Promise.resolve({\n    ok: deleteResult.ok,\n    status: deleteResult.status,\n    message: \"File Deleted\",\n    fileName: fileName\n  });\n}\n}\n\nexport default ReactS3Client;\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":8,"nodeType":"56","messageId":"57","endLine":1,"endColumn":12},{"ruleId":"54","severity":1,"message":"58","line":6,"column":9,"nodeType":"56","messageId":"57","endLine":6,"endColumn":18},{"ruleId":"50","replacedBy":"59"},{"ruleId":"52","replacedBy":"60"},{"ruleId":"54","severity":1,"message":"61","line":4,"column":8,"nodeType":"56","messageId":"57","endLine":4,"endColumn":14},{"ruleId":"62","severity":1,"message":"63","line":22,"column":70,"nodeType":"64","messageId":"65","endLine":22,"endColumn":72},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'s3configs' is defined but never used.",["66"],["67"],"'GetUrl' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]